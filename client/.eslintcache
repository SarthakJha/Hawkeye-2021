[{"/usr/src/client/src/index.tsx":"1","/usr/src/client/src/App.tsx":"2","/usr/src/client/src/components/ScrollToTop.tsx":"3","/usr/src/client/src/components/ErrorBoundary.tsx":"4","/usr/src/client/src/context/AuthContext.tsx":"5","/usr/src/client/src/components/PrivateRoute.tsx":"6","/usr/src/client/src/pages/Home.tsx":"7","/usr/src/client/src/pages/auth/ForgotPassword.tsx":"8","/usr/src/client/src/utils/requests.ts":"9","/usr/src/client/src/pages/auth/Register.tsx":"10","/usr/src/client/src/pages/auth/Login.tsx":"11","/usr/src/client/src/pages/auth/ResetPassword.tsx":"12","/usr/src/client/src/pages/Landing.tsx":"13","/usr/src/client/src/components/Loading.tsx":"14","/usr/src/client/src/hooks/useInputState.ts":"15","/usr/src/client/src/components/Button.tsx":"16","/usr/src/client/src/components/Input.tsx":"17","/usr/src/client/src/components/Img.tsx":"18","/usr/src/client/src/components/HUD.tsx":"19","/usr/src/client/src/components/Shop.tsx":"20","/usr/src/client/src/components/Rulebook.tsx":"21","/usr/src/client/src/hooks/useFetch.ts":"22","/usr/src/client/src/utils/data.ts":"23","/usr/src/client/src/pages/NotFound.tsx":"24","/usr/src/client/src/components/Dropdown.tsx":"25","/usr/src/client/src/hooks/useClickOut.ts":"26","/usr/src/client/src/pages/Nest.tsx":"27","/usr/src/client/src/pages/Question.tsx":"28","/usr/src/client/src/hooks/useConfirm.ts":"29","/usr/src/client/src/components/Confirm.tsx":"30","/usr/src/client/src/pages/auth/VerifyMail.tsx":"31","/usr/src/client/src/pages/ReadyToPlay.tsx":"32","/usr/src/client/src/pages/admin/AdminQuestions.tsx":"33"},{"size":992,"mtime":1623025937111,"results":"34","hashOfConfig":"35"},{"size":2392,"mtime":1623208142320,"results":"36","hashOfConfig":"35"},{"size":246,"mtime":1621631522665,"results":"37","hashOfConfig":"35"},{"size":951,"mtime":1620822619580,"results":"38","hashOfConfig":"35"},{"size":4400,"mtime":1623189007830,"results":"39","hashOfConfig":"35"},{"size":1288,"mtime":1622849444647,"results":"40","hashOfConfig":"35"},{"size":8381,"mtime":1623209331810,"results":"41","hashOfConfig":"35"},{"size":2483,"mtime":1623030167889,"results":"42","hashOfConfig":"35"},{"size":979,"mtime":1621116781342,"results":"43","hashOfConfig":"35"},{"size":4796,"mtime":1623018806112,"results":"44","hashOfConfig":"35"},{"size":2767,"mtime":1623206204238,"results":"45","hashOfConfig":"35"},{"size":2377,"mtime":1623029890885,"results":"46","hashOfConfig":"35"},{"size":976,"mtime":1623197290122,"results":"47","hashOfConfig":"35"},{"size":565,"mtime":1623190814390,"results":"48","hashOfConfig":"35"},{"size":447,"mtime":1620822619580,"results":"49","hashOfConfig":"35"},{"size":857,"mtime":1623189689963,"results":"50","hashOfConfig":"35"},{"size":849,"mtime":1622844557913,"results":"51","hashOfConfig":"35"},{"size":423,"mtime":1622849104280,"results":"52","hashOfConfig":"35"},{"size":2383,"mtime":1623209567870,"results":"53","hashOfConfig":"35"},{"size":4317,"mtime":1623189251168,"results":"54","hashOfConfig":"35"},{"size":415,"mtime":1621380688508,"results":"55","hashOfConfig":"35"},{"size":732,"mtime":1622990073562,"results":"56","hashOfConfig":"35"},{"size":1917,"mtime":1623071761446,"results":"57","hashOfConfig":"35"},{"size":659,"mtime":1623197806126,"results":"58","hashOfConfig":"35"},{"size":2312,"mtime":1623025157019,"results":"59","hashOfConfig":"35"},{"size":526,"mtime":1622492844703,"results":"60","hashOfConfig":"35"},{"size":6686,"mtime":1623197632688,"results":"61","hashOfConfig":"35"},{"size":17701,"mtime":1623208101947,"results":"62","hashOfConfig":"35"},{"size":612,"mtime":1620822619580,"results":"63","hashOfConfig":"35"},{"size":696,"mtime":1623017976412,"results":"64","hashOfConfig":"35"},{"size":1378,"mtime":1623029937572,"results":"65","hashOfConfig":"35"},{"size":1276,"mtime":1623194765861,"results":"66","hashOfConfig":"35"},{"size":8032,"mtime":1623206557419,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1653vne",{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"71"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"71"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"71"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"71"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"71"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"71"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"71"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"71"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/usr/src/client/src/index.tsx",["149"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport Modal from 'react-modal';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\nimport AuthProvider from './context/AuthContext';\nimport ScrollToTop from './components/ScrollToTop';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport HUD from './components/HUD';\n\nModal.setAppElement('#root');\n\n//@ts-ignore\n// ReactDOM.createPortal(<HUD />, document.getElementById('hud'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ErrorBoundary>\n        <ToastProvider\n          autoDismiss\n          autoDismissTimeout={2500}\n          placement=\"bottom-right\"\n        >\n          <AuthProvider>\n            <ScrollToTop />\n            <App />\n          </AuthProvider>\n        </ToastProvider>\n      </ErrorBoundary>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["150","151"],"/usr/src/client/src/App.tsx",["152","153"],"/usr/src/client/src/components/ScrollToTop.tsx",[],"/usr/src/client/src/components/ErrorBoundary.tsx",[],"/usr/src/client/src/context/AuthContext.tsx",["154","155"],"/usr/src/client/src/components/PrivateRoute.tsx",["156"],"import React, { ReactElement } from 'react';\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\n\nimport { useAuth } from '../context/AuthContext';\nimport Landing from '../pages/Landing';\nimport Loading from './Loading';\n\ninterface Props {\n  component: React.FC<any>;\n  path: string | string[];\n  exact?: boolean;\n  admin?: boolean;\n  auth?: boolean;\n}\n\nexport default function PrivateRoute({\n  component: Component,\n  admin,\n  auth,\n  ...rest\n}: Props): ReactElement {\n  const authContext = useAuth();\n\n  const location = useLocation();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        let check = !!authContext?.user;\n        if (admin) check = !!authContext?.isAdmin();\n        if (auth) check = !authContext?.user;\n\n        if (check) {\n          if (location.pathname === '/' && authContext?.user?.hawksNest) {\n            return <Redirect to=\"/nest\" />;\n          }\n          return <Component {...props} />;\n        } else {\n          if (auth) {\n            return <Redirect to=\"/\" />;\n          }\n\n          if (authContext?.loading)\n            return (\n              <div className=\"screen-center\">\n                <Loading />\n              </div>\n            );\n\n          return <Landing />;\n        }\n      }}\n    />\n  );\n}\n","/usr/src/client/src/pages/Home.tsx",["157","158"],"/usr/src/client/src/pages/auth/ForgotPassword.tsx",["159","160","161","162","163"],"import React, { ReactElement } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { Link } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport desktopBG from '../../assets/backround/desktop.png';\nimport Button from '../../components/Button';\nimport Img from '../../components/Img';\nimport Input from '../../components/Input';\nimport Loading from '../../components/Loading';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\n\ninterface Props {}\n\nexport default function ForgotPassword({}: Props): ReactElement {\n  const [email, setEmail, resetEmail] = useInputState();\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [loading, setLoading] = React.useState(false);\n  const [banned, setBanned] = React.useState(false);\n\n  const { addToast } = useToasts();\n\n  const auth = useAuth();\n\n  const [captcha, setCaptcha] = React.useState(false);\n  const handleVerify = () => {\n    setCaptcha(true);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    const errors: string[] = [];\n    if (!email) errors.push('Email is Required');\n    if (!captcha) errors.push('Captcha must be completed');\n\n    if (errors.length === 0) {\n      try {\n        await auth?.forgotPassword(email);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n      }\n    } else {\n      setErrors(errors);\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-page login forgot\">\n      <Img src={desktopBG} className=\"background\" />\n      <h1>HAWKEYE</h1>\n      <h2>Forgot Password</h2>\n      {errors.map((err: string) => {\n        return <div className=\"error\">{err}</div>;\n      })}\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={email}\n          onChange={setEmail}\n          type=\"text\"\n          placeholder=\"Email ID\"\n          className=\"input\"\n        />\n        <div className=\"catcha\">\n          <ReCAPTCHA\n            sitekey=\"6LfvBrsaAAAAAEPwCjRmPaVuK7s8QNP5YLN8h5-W\"\n            onChange={handleVerify}\n            theme=\"dark\"\n          />\n        </div>\n        <div className=\"forgot\">\n          <Link to=\"/login\">Back to login</Link>\n        </div>\n        <Button className=\"auth-button\" name=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n","/usr/src/client/src/utils/requests.ts",[],"/usr/src/client/src/pages/auth/Register.tsx",["164","165","166","167","168","169","170","171","172","173"],"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport desktopBG from '../../assets/backround/desktop.png';\nimport Button from '../../components/Button';\nimport Img from '../../components/Img';\nimport Input from '../../components/Input';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\n\nimport ReCAPTCHA from 'react-google-recaptcha';\n\ninterface Props {}\n\nfunction validateEmail(email: string) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction validateNumber(number: string) {\n  if (number[0] === '+') number = number.slice(3);\n  const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n  return re.test(String(number).toLowerCase());\n}\n\nexport default function Register({}: Props): ReactElement {\n  const [name, setName, resetName] = useInputState();\n  const [username, setUsername, resetUsername] = useInputState();\n  const [email, setEmail, resetEmail] = useInputState();\n  const [collage, setCollage, resetCollage] = useInputState();\n  const [number, setNumber, resetNumber] = useInputState();\n\n  const [password, setPassword, resetPassword] = useInputState();\n  const [confirm, setConfirm, resetConfirm] = useInputState();\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const { addToast } = useToasts();\n\n  const [captcha, setCaptcha] = React.useState(false);\n  const handleVerify = () => {\n    setCaptcha(true);\n  };\n\n  const auth = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    const errors: string[] = [];\n    if (!name || !username || !email || !password || !collage || !number)\n      errors.push('All fields are required');\n    if (!validateNumber(number) && number)\n      errors.push('Phone Number is invalid');\n    if (!validateEmail(email) && email) errors.push('Email is invalid');\n    if (name.length > 15 && name) errors.push('Name is too long');\n    if (username.length > 15 && username) errors.push('Username is too long');\n    if (password.length < 8 && password)\n      errors.push('Password must be atleast 8 Characters');\n    else if (password !== confirm) errors.push('Passwords do not match');\n    if (!captcha) errors.push('Captcha must be completed');\n\n    if (errors.length === 0) {\n      try {\n        await auth?.register(name, username, email, password, collage, number);\n        setLoading(false);\n      } catch (err) {\n        setErrors([err.response.data.message]);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n      setErrors(errors);\n    }\n  };\n\n  //Take phone number or something\n  return (\n    <div className=\"auth-page register\">\n      <Img src={desktopBG} className=\"background\" />\n      <h1>HAWKEYE</h1>\n      <h2>Sign Up</h2>\n      {errors.map((err: string) => {\n        return <div className=\"error\">{err}</div>;\n      })}\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={name}\n          onChange={setName}\n          type=\"text\"\n          placeholder=\"Name\"\n          className=\"input\"\n        />\n        <Input\n          value={username}\n          onChange={setUsername}\n          type=\"text\"\n          placeholder=\"Username\"\n          className=\"input\"\n        />\n        <Input\n          value={email}\n          onChange={setEmail}\n          type=\"text\"\n          placeholder=\"Email ID\"\n          className=\"input\"\n        />\n        <Input\n          value={collage}\n          onChange={setCollage}\n          type=\"text\"\n          placeholder=\"College\"\n          className=\"input\"\n        />\n        <Input\n          value={number}\n          onChange={setNumber}\n          type=\"text\"\n          placeholder=\"Phone Number\"\n          className=\"input\"\n        />\n        <Input\n          value={password}\n          onChange={setPassword}\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"input\"\n        />\n        <Input\n          value={confirm}\n          onChange={setConfirm}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          className=\"input\"\n        />\n        <div className=\"catcha\">\n          <ReCAPTCHA\n            sitekey=\"6LfvBrsaAAAAAEPwCjRmPaVuK7s8QNP5YLN8h5-W\"\n            onChange={handleVerify}\n            theme=\"dark\"\n          />\n        </div>\n\n        <Button className=\"auth-button\" name=\"Sign up\" />\n      </form>\n      <div className=\"swap\">\n        Already have an account? <Link to=\"/login\">Log In</Link>{' '}\n      </div>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/auth/Login.tsx",["174","175","176","177","178"],"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport desktopBG from '../../assets/backround/desktop.png';\nimport Button from '../../components/Button';\nimport Img from '../../components/Img';\nimport Input from '../../components/Input';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\nimport hawk from '../../assets/hawk_transparent.png';\n\ninterface Props {}\n\nexport default function Login({}: Props): ReactElement {\n  const [email, setEmail, resetEmail] = useInputState();\n  const [password, setPassword, resetPassword] = useInputState();\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [loading, setLoading] = React.useState(false);\n  const [banned, setBanned] = React.useState(false);\n\n  const { addToast } = useToasts();\n\n  const auth = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    const errors: string[] = [];\n    if (!email) errors.push('Email is Required');\n    if (!password) errors.push('Password is Required');\n\n    if (errors.length === 0) {\n      try {\n        await auth?.login(email, password);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n\n        if (err.response.data.message === 'This route is forbidden!') {\n          setBanned(true);\n          addToast('User Banned', { appearance: 'error' });\n          return;\n        }\n\n        if (err.response.data.message === 'User not verified')\n          addToast('Verification link sent to mail');\n\n        setErrors([err.response.data.message]);\n      }\n    } else {\n      setLoading(false);\n      setErrors(errors);\n    }\n  };\n\n  return (\n    <div className=\"auth-page login\">\n      <Img src={desktopBG} className=\"background\" />\n      <img src={hawk} alt=\"\" />\n      <h1>HAWKEYE</h1>\n      <h2>Log in</h2>\n      <h3>Welcome back player</h3>\n      {errors.map((err: string) => {\n        return <div className=\"error\">{err}</div>;\n      })}\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={email}\n          onChange={setEmail}\n          type=\"text\"\n          placeholder=\"Email ID\"\n          className=\"input\"\n        />\n        <Input\n          value={password}\n          onChange={setPassword}\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"input\"\n        />\n        <div className=\"forgot\">\n          <Link to=\"/forgot-password\">Forgot Password?</Link>\n        </div>\n        <Button className=\"auth-button\" name=\"Login\" />\n      </form>\n      <div className=\"swap\">\n        New to hawkeye? <Link to=\"/register\">Create Account</Link>{' '}\n      </div>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/auth/ResetPassword.tsx",["179","180","181","182"],"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport desktopBG from '../../assets/backround/desktop.png';\nimport Button from '../../components/Button';\nimport Img from '../../components/Img';\nimport Input from '../../components/Input';\nimport Loading from '../../components/Loading';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\n\ninterface Props {\n  match: any;\n}\n\nexport default function ResetPassword({ match }: Props): ReactElement {\n  const [password, setPassword, resetPassword] = useInputState();\n  const [confirm, setConfirm, resetConfirm] = useInputState();\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const { addToast } = useToasts();\n\n  const auth = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    const errors: string[] = [];\n    if (!password) errors.push('Password is required');\n    else if (password.length < 8)\n      errors.push('Password must be atleast 8 Characters');\n    if (password !== confirm) errors.push('Passwords do not match');\n\n    if (errors.length === 0) {\n      try {\n        await auth?.resetPassword(password, match.params.token);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n      setErrors(errors);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-page login forgot\">\n      <Img src={desktopBG} className=\"background\" />\n      <h1>HAWKEYE</h1>\n      <h2>Reset Password</h2>\n      {errors.map((err: string) => {\n        return <div className=\"error\">{err}</div>;\n      })}\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={password}\n          onChange={setPassword}\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"input\"\n        />\n        <Input\n          value={confirm}\n          onChange={setConfirm}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          className=\"input\"\n        />\n        <Button className=\"auth-button\" name=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/Landing.tsx",["183","184","185","186"],"import React, { ReactElement } from 'react';\nimport Button from '../components/Button';\nimport HUD from '../components/HUD';\nimport hawk from '../assets/hawk.png';\n//@ts-ignore\nimport Typewriter from 'typewriter-effect/dist/core';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Landing(): ReactElement {\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  const histroy = useHistory();\n\n  React.useEffect(() => {\n    const typewriter = new Typewriter(headingRef.current, {\n      loop: false,\n    });\n\n    typewriter\n      .typeString('The <span class=\"hawk-name\" >Hawk</span> has landed')\n      .start()\n      .pauseFor(500)\n      .callFunction(() => {\n        histroy.push(\n          localStorage.getItem('hawk-ready') ? '/login' : '/register'\n        );\n      });\n  }, []);\n\n  return (\n    <div className=\"landing\">\n      {/* <HUD /> */}\n      <img className=\"hawk\" src={hawk} alt=\"\" />\n      <h1 ref={headingRef}></h1>\n    </div>\n  );\n}\n","/usr/src/client/src/components/Loading.tsx",["187"],"/usr/src/client/src/hooks/useInputState.ts",[],"/usr/src/client/src/components/Button.tsx",[],"/usr/src/client/src/components/Input.tsx",[],"/usr/src/client/src/components/Img.tsx",[],"/usr/src/client/src/components/HUD.tsx",["188"],"/usr/src/client/src/components/Shop.tsx",[],"/usr/src/client/src/components/Rulebook.tsx",[],"/usr/src/client/src/hooks/useFetch.ts",["189","190"],"import { useEffect, useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { get } from '../utils/requests';\n\nexport default (url: string, lazy = false) => {\n  const [isLoading, setIsLoading] = useState(!lazy);\n  const [error, setError] = useState<any>(null);\n  const [data, setData] = useState<any>(null);\n\n  const auth = useAuth();\n\n  const fetch = (loading = true) => {\n    setIsLoading(loading);\n    get(url)\n      .then((data: any) => {\n        setData(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setError(err);\n        auth?.check();\n      });\n  };\n\n  useEffect(() => {\n    if (!lazy) {\n      fetch();\n    }\n  }, []);\n\n  return { isLoading, error, data, fetch };\n};\n","/usr/src/client/src/utils/data.ts",[],"/usr/src/client/src/pages/NotFound.tsx",["191"],"import React, { ReactElement } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport hawk from '../assets/hawk.png';\nimport { useAuth } from '../context/AuthContext';\n\ninterface Props {}\n\nexport default function NotFoud({}: Props): ReactElement {\n  const location = useLocation();\n  const user = useAuth()?.user;\n\n  const isNest = location.pathname === '/nest';\n\n  return (\n    <div className={isNest && user ? 'not-found not-found--nest' : 'not-found'}>\n      <img src={hawk} alt=\"\" />\n      <h1>\n        <span className=\"hawk-name\">Hawk</span> thinks you're{' '}\n        {isNest && user ? 'not worthy' : 'lost'}\n      </h1>\n    </div>\n  );\n}\n","/usr/src/client/src/components/Dropdown.tsx",["192"],"import React, { ReactElement } from 'react';\nimport useClickOut from '../hooks/useClickOut';\nimport { Nullable } from '../utils/types';\n\ninterface Props {\n  options: {\n    label: string;\n    value: string;\n    locked: boolean;\n    completed: boolean;\n  }[];\n  defaultIndex?: number;\n  setter: any;\n}\n\nexport default function Dropdown({\n  options,\n  defaultIndex = 0,\n  setter,\n}: Props): Nullable<ReactElement> {\n  const [open, setOpen] = React.useState(false);\n  const [currentOption, setCurrentOption] = React.useState(defaultIndex);\n\n  const divRef = React.useRef<HTMLDivElement>(null);\n\n  useClickOut(\n    divRef,\n    () => {},\n    () => {\n      setOpen(false);\n    }\n  );\n\n  React.useEffect(() => {\n    setter(options[defaultIndex]);\n  }, []);\n\n  if (Object.keys(options).length === 0) return null;\n  return (\n    <div\n      className={open ? 'dropdown-div dropdown-div--open' : 'dropdown-div'}\n      ref={divRef}\n    >\n      <div\n        className={open ? 'dropdown-top dropdown-top--open' : 'dropdown-top'}\n        onClick={() => setOpen((prev) => !prev)}\n      >\n        <div className=\"arrow\">\n          <i className=\"fas fa-angle-down\"></i>\n        </div>\n        <h4>{options[currentOption].label}</h4>\n      </div>\n      {open && (\n        <div\n          className={\n            open ? 'dropdown-list dropdown-list--open' : 'dropdown-list'\n          }\n        >\n          {options.map((option: any, index: number) => {\n            let classNames = ['option'];\n            if (option.locked) classNames.push('option--locked');\n            if (option.completed) classNames.push('option--completed');\n\n            return (\n              <div\n                onClick={() => {\n                  setCurrentOption(index);\n                  setOpen(false);\n                  setter(options[index]);\n                }}\n                key={option.value}\n                className={classNames.join(' ')}\n              >\n                {!option.locked && !option.completed && (\n                  <i className=\"fas fa-unlock\"></i>\n                )}\n                {(option.locked || option.completed) && (\n                  <i className=\"fas fa-lock\"></i>\n                )}\n                <h4> {option.label} </h4>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","/usr/src/client/src/hooks/useClickOut.ts",["193"],"import { useEffect } from 'react';\n\nexport default function useClickOut(\n  ref: any,\n  insidehandler: () => any,\n  outsideHandler: () => any\n) {\n  useEffect(() => {\n    function clickOutsiteHandler(e: any) {\n      if (ref.current && !ref.current.contains(e.target)) {\n        outsideHandler();\n      } else {\n        insidehandler();\n      }\n    }\n\n    document.addEventListener('mousedown', clickOutsiteHandler);\n\n    return () => {\n      document.removeEventListener('mousedown', clickOutsiteHandler);\n    };\n  }, [ref]);\n}\n","/usr/src/client/src/pages/Nest.tsx",["194","195","196","197"],"import React, { ReactElement } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport hawk from '../assets/hawk.png';\nimport useFetch from '../hooks/useFetch';\nimport { useToasts } from 'react-toast-notifications';\nimport { useHistory } from 'react-router-dom';\nimport useInputState from '../hooks/useInputState';\nimport Loading from '../components/Loading';\nimport { post } from '../utils/requests';\nimport { powerUps } from '../utils/data';\nimport ReactTooltip from 'react-tooltip';\nimport Button from '../components/Button';\nimport HUD from '../components/HUD';\nimport Img from '../components/Img';\nimport nestBG from '../assets/backround/nest.png';\n//@ts-ignore\nimport Typewriter from 'typewriter-effect/dist/core';\n\ninterface Props {}\n\nexport default function Nest({}: Props): ReactElement {\n  const questionFetcher = useFetch(`/nest`);\n  const [answer, setAnswer, resetAnswer] = useInputState();\n  const [welcome, setWelcome] = React.useState(() => {\n    const bool = localStorage.getItem('welcome-to-nest');\n    return bool !== 'true';\n  });\n\n  const { addToast } = useToasts();\n  const auth = useAuth();\n\n  const handleSubmit = async (\n    e: React.FormEvent<HTMLFormElement>\n  ): Promise<any> => {\n    e.preventDefault();\n    if (!answer) return;\n\n    try {\n      const data = await post(\n        `/nest/submit/${questionFetcher.data.question._id}`,\n        {\n          attempt: answer,\n        }\n      );\n\n      if (!data.success) {\n        questionFetcher.fetch(false);\n        addToast(data.message, { appearance: 'error' });\n        resetAnswer();\n        return;\n      }\n\n      addToast('Correct answer', { appearance: 'success' });\n      questionFetcher.fetch();\n      resetAnswer();\n    } catch (err) {\n      auth?.check();\n    }\n  };\n\n  const headingRef = React.useRef<HTMLHeadingElement>(null);\n  React.useEffect(() => {\n    const typewriter = new Typewriter(headingRef.current, {\n      loop: false,\n    });\n\n    typewriter\n      .typeString(\"Welcome to the <span class='hawk-name'>Hawk</span>'s nest\")\n      .start()\n      .pauseFor(500)\n      .callFunction(() => {\n        setWelcome(false);\n        localStorage.setItem('welcome-to-nest', 'true');\n      });\n  }, []);\n\n  if (welcome) {\n    return (\n      <div className=\"nest-welcome\">\n        <img src={hawk} alt=\"\" />\n        <h1 ref={headingRef}></h1>\n      </div>\n    );\n  }\n\n  if (questionFetcher.isLoading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"question question--nest\">\n      <HUD />\n      <Img src={nestBG} className=\"background\" />\n      <h1>Hawkeye</h1>\n      <main>\n        <Hints\n          hints={questionFetcher.data.qhints.map((hint: any) => hint.hintText)}\n        />\n        <form className=\"answer\" onSubmit={handleSubmit}>\n          <div className=\"top\">\n            <h2>Level {questionFetcher.data.question.level}</h2>\n            <p>{questionFetcher.data.question.text}</p>\n          </div>\n          <div className=\"bottom\">\n            <input type=\"text\" value={answer} onChange={setAnswer} />\n            <Button name=\"Submit\" />\n          </div>\n        </form>\n        <Stats\n          stats={questionFetcher.data.stats}\n          attempts={questionFetcher.data.nestAttempts}\n        />\n      </main>\n    </div>\n  );\n}\n\ninterface IStatsProps {\n  attempts: any[];\n  stats: {\n    atPar: number;\n    leading: number;\n    lagging: number;\n  };\n}\n\nfunction Stats({ attempts, stats }: IStatsProps): ReactElement {\n  const [attemptsOpen, setAttemptsOpen] = React.useState(true);\n\n  const percentage =\n    (100 / (stats.leading + stats.lagging)) * stats.lagging || 0;\n\n  return (\n    <div className=\"data\">\n      <div className=\"top\">\n        <h2\n          className={attemptsOpen ? 'active' : ''}\n          onClick={() => setAttemptsOpen(true)}\n        >\n          Attempts\n        </h2>\n        <h2\n          className={!attemptsOpen ? 'active' : ''}\n          onClick={() => setAttemptsOpen(false)}\n        >\n          Stats\n        </h2>\n      </div>\n      {attemptsOpen && (\n        <section className=\"attempts\">\n          {attempts.reverse().map((attempt: string) => {\n            return (\n              <div key={attempt} className=\"attempt\">\n                {attempt}\n              </div>\n            );\n          })}\n          {!attempts.length && (\n            <h2 className=\"zero\">You're attempts will show up here</h2>\n          )}\n        </section>\n      )}\n      {!attemptsOpen && (\n        <section className=\"stats\">\n          <div className=\"graph\">\n            <div className=\"bar\">\n              <div\n                style={{\n                  transform: `translateX(${percentage}%)`,\n                }}\n                className=\"user\"\n              >\n                <i\n                  data-tip={`You are at par with ${stats.atPar} ${\n                    stats.atPar > 1 ? 'players' : 'player'\n                  }`}\n                  className=\"fas fa-user\"\n                ></i>\n              </div>\n            </div>\n            <div\n              style={{\n                transform: `translateX(${percentage}%)`,\n              }}\n              className=\"indicator\"\n            >\n              <i className=\"fas fa-sort-up\"></i>\n            </div>\n            <ReactTooltip effect=\"solid\" type=\"light\" />\n          </div>\n          <div className=\"bottom\">\n            <div className=\"card\">\n              <span style={{ color: '#5157E7' }}>\n                {stats.lagging} <i className=\"fas fa-users\"></i>\n              </span>\n              <h3>Lagging</h3>\n            </div>\n            <div className=\"card\">\n              <span style={{ color: '#5157E7' }}>\n                {stats.atPar} <i className=\"fas fa-users\"></i>\n              </span>\n              <h3>At Par</h3>\n            </div>\n            <div className=\"card\">\n              <span style={{ color: '#5157E7' }}>\n                {stats.leading} <i className=\"fas fa-users\"></i>\n              </span>\n              <h3>Leading</h3>\n            </div>\n          </div>\n        </section>\n      )}\n    </div>\n  );\n}\n\nfunction Hints({ hints }: { hints: string[] }): ReactElement {\n  return (\n    <div className=\"hints\">\n      <h2>Hints</h2>\n      <section>\n        {hints.map((hint: string) => {\n          return <div className=\"hint-unlocked\">{hint}</div>;\n        })}\n\n        {[...Array(3 - hints.length)].map((_: undefined) => {\n          return (\n            <div className=\"hint-locked\">\n              <i data-tip=\"Hint Locked\" className=\"fas fa-lock\"></i>\n            </div>\n          );\n        })}\n\n        <ReactTooltip effect=\"solid\" type=\"light\" />\n      </section>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/Question.tsx",["198","199","200"],"/usr/src/client/src/hooks/useConfirm.ts",[],"/usr/src/client/src/components/Confirm.tsx",[],"/usr/src/client/src/pages/auth/VerifyMail.tsx",["201"],"import React, { ReactElement } from 'react';\nimport Loading from '../../components/Loading';\nimport { put } from '../../utils/requests';\nimport desktopBG from '../../assets/backround/desktop.png';\n\nimport animationData from '../../assets/animations/verified.json';\nimport Lottie from 'react-lottie';\nimport Img from '../../components/Img';\nimport Button from '../../components/Button';\n\ninterface Props {\n  match: any;\n}\n\nconst defaultOptions = {\n  loop: false,\n  autoplay: true,\n  animationData: animationData,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nexport default function VerifyMail({ match }: Props): ReactElement {\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    (async () => {\n      try {\n        await put(`/verify/${match.params.token}`);\n        setLoading(false);\n      } catch (err) {}\n    })();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"verify-mail\">\n      <Img src={desktopBG} className=\"background\" />\n      <Lottie options={defaultOptions} height={250} width={250} />\n      <h1>Email Verified!</h1>\n      <Button\n        className=\"btn\"\n        width={200}\n        pathname={`/login`}\n        state={{ allow: true }}\n        link\n        name=\"Login\"\n      />\n    </div>\n  );\n}\n","/usr/src/client/src/pages/ReadyToPlay.tsx",["202","203","204","205","206"],"import React, { ReactElement } from 'react';\nimport { Link, RouteComponentProps, useHistory } from 'react-router-dom';\nimport useInputState from '../hooks/useInputState';\nimport Img from '../components/Img';\nimport desktopBG from '../assets/backround/desktop.png';\nimport Button from '../components/Button';\n\ntype TProps = { id: string };\n\nexport default function ReadyToPlay({ id }: TProps): ReactElement {\n  const [answer, setAnswer, resetAnswer] = useInputState();\n  const history = useHistory();\n\n  function handleClick(): any {\n    localStorage.setItem('hawk-ready', '1');\n  }\n\n  return (\n    <div className=\"question question--ready\">\n      <Img src={desktopBG} className=\"background\" />\n      <h1>Hawkeye</h1>\n      <main className=\"mainr\">\n        <form className=\"answer\">\n          <div className=\"top\">\n            <h2>Level 0</h2>\n            <p>Are you ready?</p>\n          </div>\n          <div className=\"bottomr\">\n            <Button\n              name=\"Yes\"\n              pathname={`/question/${id}`}\n              onClick={handleClick}\n            />\n            <Button\n              onClick={() => {\n                history.push('/');\n              }}\n              name=\"No\"\n            />\n          </div>\n        </form>\n      </main>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/admin/AdminQuestions.tsx",["207","208","209","210"],{"ruleId":"211","severity":1,"message":"212","line":11,"column":8,"nodeType":"213","messageId":"214","endLine":11,"endColumn":11},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"211","severity":1,"message":"219","line":2,"column":25,"nodeType":"213","messageId":"214","endLine":2,"endColumn":36},{"ruleId":"211","severity":1,"message":"220","line":10,"column":10,"nodeType":"213","messageId":"214","endLine":10,"endColumn":13},{"ruleId":"211","severity":1,"message":"221","line":50,"column":9,"nodeType":"213","messageId":"214","endLine":50,"endColumn":17},{"ruleId":"222","severity":1,"message":"223","line":72,"column":6,"nodeType":"224","endLine":72,"endColumn":8,"suggestions":"225"},{"ruleId":"211","severity":1,"message":"226","line":2,"column":27,"nodeType":"213","messageId":"214","endLine":2,"endColumn":37},{"ruleId":"211","severity":1,"message":"227","line":12,"column":8,"nodeType":"213","messageId":"214","endLine":12,"endColumn":15},{"ruleId":"222","severity":1,"message":"228","line":164,"column":6,"nodeType":"224","endLine":164,"endColumn":8,"suggestions":"229"},{"ruleId":"230","severity":1,"message":"231","line":15,"column":40,"nodeType":"232","messageId":"233","endLine":15,"endColumn":49},{"ruleId":"211","severity":1,"message":"234","line":16,"column":27,"nodeType":"213","messageId":"214","endLine":16,"endColumn":37},{"ruleId":"211","severity":1,"message":"235","line":20,"column":10,"nodeType":"213","messageId":"214","endLine":20,"endColumn":16},{"ruleId":"211","severity":1,"message":"236","line":20,"column":18,"nodeType":"213","messageId":"214","endLine":20,"endColumn":27},{"ruleId":"211","severity":1,"message":"237","line":22,"column":11,"nodeType":"213","messageId":"214","endLine":22,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":26,"column":34,"nodeType":"232","messageId":"233","endLine":26,"endColumn":43},{"ruleId":"211","severity":1,"message":"238","line":27,"column":25,"nodeType":"213","messageId":"214","endLine":27,"endColumn":34},{"ruleId":"211","severity":1,"message":"239","line":28,"column":33,"nodeType":"213","messageId":"214","endLine":28,"endColumn":46},{"ruleId":"211","severity":1,"message":"234","line":29,"column":27,"nodeType":"213","messageId":"214","endLine":29,"endColumn":37},{"ruleId":"211","severity":1,"message":"240","line":30,"column":31,"nodeType":"213","messageId":"214","endLine":30,"endColumn":43},{"ruleId":"211","severity":1,"message":"241","line":31,"column":29,"nodeType":"213","messageId":"214","endLine":31,"endColumn":40},{"ruleId":"211","severity":1,"message":"242","line":33,"column":33,"nodeType":"213","messageId":"214","endLine":33,"endColumn":46},{"ruleId":"211","severity":1,"message":"243","line":34,"column":31,"nodeType":"213","messageId":"214","endLine":34,"endColumn":43},{"ruleId":"211","severity":1,"message":"244","line":37,"column":10,"nodeType":"213","messageId":"214","endLine":37,"endColumn":17},{"ruleId":"211","severity":1,"message":"237","line":39,"column":11,"nodeType":"213","messageId":"214","endLine":39,"endColumn":19},{"ruleId":"230","severity":1,"message":"231","line":14,"column":31,"nodeType":"232","messageId":"233","endLine":14,"endColumn":40},{"ruleId":"211","severity":1,"message":"234","line":15,"column":27,"nodeType":"213","messageId":"214","endLine":15,"endColumn":37},{"ruleId":"211","severity":1,"message":"242","line":16,"column":33,"nodeType":"213","messageId":"214","endLine":16,"endColumn":46},{"ruleId":"211","severity":1,"message":"244","line":19,"column":10,"nodeType":"213","messageId":"214","endLine":19,"endColumn":17},{"ruleId":"211","severity":1,"message":"235","line":20,"column":10,"nodeType":"213","messageId":"214","endLine":20,"endColumn":16},{"ruleId":"211","severity":1,"message":"245","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"242","line":17,"column":33,"nodeType":"213","messageId":"214","endLine":17,"endColumn":46},{"ruleId":"211","severity":1,"message":"243","line":18,"column":31,"nodeType":"213","messageId":"214","endLine":18,"endColumn":43},{"ruleId":"211","severity":1,"message":"237","line":23,"column":11,"nodeType":"213","messageId":"214","endLine":23,"endColumn":19},{"ruleId":"211","severity":1,"message":"246","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"212","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":11},{"ruleId":"222","severity":1,"message":"247","line":27,"column":6,"nodeType":"224","endLine":27,"endColumn":8,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":33,"column":7,"nodeType":"251","endLine":33,"endColumn":28},{"ruleId":"211","severity":1,"message":"252","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"222","severity":1,"message":"253","line":33,"column":6,"nodeType":"224","endLine":33,"endColumn":30,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":5,"column":1,"nodeType":"257","endLine":32,"endColumn":3},{"ruleId":"222","severity":1,"message":"258","line":29,"column":6,"nodeType":"224","endLine":29,"endColumn":8,"suggestions":"259"},{"ruleId":"230","severity":1,"message":"231","line":8,"column":33,"nodeType":"232","messageId":"233","endLine":8,"endColumn":42},{"ruleId":"222","severity":1,"message":"260","line":36,"column":6,"nodeType":"224","endLine":36,"endColumn":8,"suggestions":"261"},{"ruleId":"222","severity":1,"message":"262","line":22,"column":6,"nodeType":"224","endLine":22,"endColumn":11,"suggestions":"263"},{"ruleId":"211","severity":1,"message":"226","line":6,"column":10,"nodeType":"213","messageId":"214","endLine":6,"endColumn":20},{"ruleId":"211","severity":1,"message":"264","line":10,"column":10,"nodeType":"213","messageId":"214","endLine":10,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":21,"column":30,"nodeType":"232","messageId":"233","endLine":21,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":81,"column":9,"nodeType":"251","endLine":81,"endColumn":30},{"ruleId":"211","severity":1,"message":"220","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":13},{"ruleId":"222","severity":1,"message":"265","line":56,"column":6,"nodeType":"224","endLine":56,"endColumn":8,"suggestions":"266"},{"ruleId":"222","severity":1,"message":"267","line":61,"column":6,"nodeType":"224","endLine":61,"endColumn":33,"suggestions":"268"},{"ruleId":"222","severity":1,"message":"269","line":34,"column":6,"nodeType":"224","endLine":34,"endColumn":8,"suggestions":"270"},{"ruleId":"211","severity":1,"message":"245","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"271","line":2,"column":16,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"211","severity":1,"message":"272","line":11,"column":10,"nodeType":"213","messageId":"214","endLine":11,"endColumn":16},{"ruleId":"211","severity":1,"message":"273","line":11,"column":18,"nodeType":"213","messageId":"214","endLine":11,"endColumn":27},{"ruleId":"211","severity":1,"message":"274","line":11,"column":29,"nodeType":"213","messageId":"214","endLine":11,"endColumn":40},{"ruleId":"211","severity":1,"message":"275","line":24,"column":12,"nodeType":"213","messageId":"214","endLine":24,"endColumn":15},{"ruleId":"222","severity":1,"message":"276","line":57,"column":6,"nodeType":"224","endLine":57,"endColumn":8,"suggestions":"277"},{"ruleId":"222","severity":1,"message":"278","line":149,"column":6,"nodeType":"224","endLine":149,"endColumn":8,"suggestions":"279"},{"ruleId":"211","severity":1,"message":"280","line":205,"column":13,"nodeType":"213","messageId":"214","endLine":205,"endColumn":17},"@typescript-eslint/no-unused-vars","'HUD' is defined but never used.","Identifier","unusedVar","no-native-reassign",["281"],"no-negated-in-lhs",["282"],"'useLocation' is defined but never used.","'get' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMe'. Either include it or remove the dependency array.","ArrayExpression",["283"],"'useHistory' is defined but never used.","'Loading' is defined but never used.","React Hook React.useEffect has missing dependencies: 'auth?.user?.lastUnlockedIndex', 'auth?.user?.regions', and 'pins'. Either include them or remove the dependency array.",["284"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'resetEmail' is assigned a value but never used.","'banned' is assigned a value but never used.","'setBanned' is assigned a value but never used.","'addToast' is assigned a value but never used.","'resetName' is assigned a value but never used.","'resetUsername' is assigned a value but never used.","'resetCollage' is assigned a value but never used.","'resetNumber' is assigned a value but never used.","'resetPassword' is assigned a value but never used.","'resetConfirm' is assigned a value but never used.","'loading' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","React Hook React.useEffect has a missing dependency: 'histroy'. Either include it or remove the dependency array.",["285"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Lottie' is defined but never used.","React Hook React.useEffect has missing dependencies: 'onClose' and 'onOpen'. Either include them or remove the dependency array. If 'onOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["286"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'fetch' and 'lazy'. Either include them or remove the dependency array.",["287"],"React Hook React.useEffect has missing dependencies: 'defaultIndex', 'options', and 'setter'. Either include them or remove the dependency array. If 'setter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["288"],"React Hook useEffect has missing dependencies: 'insidehandler' and 'outsideHandler'. Either include them or remove the dependency array. If 'outsideHandler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["289"],"'powerUps' is defined but never used.","React Hook React.useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["290"],"React Hook React.useEffect has missing dependencies: 'auth' and 'questionFetcher.data.question.region.name'. Either include them or remove the dependency array.",["291"],"React Hook React.useEffect has a missing dependency: 'match.params.token'. Either include it or remove the dependency array.",["292"],"'RouteComponentProps' is defined but never used.","'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.","'resetAnswer' is assigned a value but never used.","'res' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.",["293"],"React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.",["294"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [fetchMe]",{"range":"319","text":"320"},"Update the dependencies array to be: [auth?.user?.lastUnlockedIndex, auth?.user?.regions, pins]",{"range":"321","text":"322"},"Update the dependencies array to be: [histroy]",{"range":"323","text":"324"},"Update the dependencies array to be: [shopOpen, rulebookOpen, onOpen, onClose]",{"range":"325","text":"326"},"Update the dependencies array to be: [fetch, lazy]",{"range":"327","text":"328"},"Update the dependencies array to be: [defaultIndex, options, setter]",{"range":"329","text":"330"},"Update the dependencies array to be: [insidehandler, outsideHandler, ref]",{"range":"331","text":"332"},"Update the dependencies array to be: [auth]",{"range":"333","text":"334"},"Update the dependencies array to be: [auth, questionFetcher.data.question.region.name, questionFetcher.isLoading]",{"range":"335","text":"336"},"Update the dependencies array to be: [match.params.token]",{"range":"337","text":"338"},"Update the dependencies array to be: [fetchQuestions]",{"range":"339","text":"340"},"Update the dependencies array to be: [fetch]",{"range":"341","text":"342"},[1772,1774],"[fetchMe]",[4746,4748],"[auth?.user?.lastUnlockedIndex, auth?.user?.regions, pins]",[807,809],"[histroy]",[913,937],"[shopOpen, rulebookOpen, onOpen, onClose]",[679,681],"[fetch, lazy]",[744,746],"[defaultIndex, options, setter]",[516,521],"[insidehandler, outsideHandler, ref]",[1804,1806],"[auth]",[1955,1982],"[auth, questionFetcher.data.question.region.name, questionFetcher.isLoading]",[884,886],"[match.params.token]",[1432,1434],"[fetchQuestions]",[4099,4101],"[fetch]"]