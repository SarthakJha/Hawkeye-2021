[{"/usr/src/client/src/index.tsx":"1","/usr/src/client/src/App.tsx":"2","/usr/src/client/src/components/ScrollToTop.tsx":"3","/usr/src/client/src/components/ErrorBoundary.tsx":"4","/usr/src/client/src/context/AuthContext.tsx":"5","/usr/src/client/src/components/PrivateRoute.tsx":"6","/usr/src/client/src/pages/Home.tsx":"7","/usr/src/client/src/pages/auth/ForgotPassword.tsx":"8","/usr/src/client/src/utils/requests.ts":"9","/usr/src/client/src/pages/auth/Register.tsx":"10","/usr/src/client/src/pages/auth/Login.tsx":"11","/usr/src/client/src/pages/auth/ResetPassword.tsx":"12","/usr/src/client/src/pages/Admin.tsx":"13","/usr/src/client/src/pages/Landing.tsx":"14","/usr/src/client/src/components/Loading.tsx":"15","/usr/src/client/src/hooks/useInputState.ts":"16","/usr/src/client/src/components/Button.tsx":"17","/usr/src/client/src/components/Input.tsx":"18","/usr/src/client/src/components/Img.tsx":"19","/usr/src/client/src/components/HUD.tsx":"20","/usr/src/client/src/components/Shop.tsx":"21","/usr/src/client/src/components/Rulebook.tsx":"22","/usr/src/client/src/hooks/useFetch.ts":"23","/usr/src/client/src/utils/data.ts":"24","/usr/src/client/src/pages/NotFound.tsx":"25","/usr/src/client/src/components/Dropdown.tsx":"26","/usr/src/client/src/hooks/useClickOut.ts":"27","/usr/src/client/src/pages/Nest.tsx":"28","/usr/src/client/src/pages/Question.tsx":"29","/usr/src/client/src/hooks/useConfirm.ts":"30","/usr/src/client/src/components/Confirm.tsx":"31","/usr/src/client/src/pages/auth/VerifyMail.tsx":"32","/usr/src/client/src/pages/ReadyToPlay.tsx":"33"},{"size":992,"mtime":1623025937111,"results":"34","hashOfConfig":"35"},{"size":2158,"mtime":1623206213874,"results":"36","hashOfConfig":"35"},{"size":246,"mtime":1621631522665,"results":"37","hashOfConfig":"35"},{"size":951,"mtime":1620822619580,"results":"38","hashOfConfig":"35"},{"size":4400,"mtime":1623189007830,"results":"39","hashOfConfig":"35"},{"size":1288,"mtime":1622849444647,"results":"40","hashOfConfig":"35"},{"size":7802,"mtime":1623190310960,"results":"41","hashOfConfig":"35"},{"size":2483,"mtime":1623030167889,"results":"42","hashOfConfig":"35"},{"size":979,"mtime":1621116781342,"results":"43","hashOfConfig":"35"},{"size":4796,"mtime":1623018806112,"results":"44","hashOfConfig":"35"},{"size":2767,"mtime":1623206204238,"results":"45","hashOfConfig":"35"},{"size":2377,"mtime":1623029890885,"results":"46","hashOfConfig":"35"},{"size":6298,"mtime":1621542127240,"results":"47","hashOfConfig":"35"},{"size":976,"mtime":1623197290122,"results":"48","hashOfConfig":"35"},{"size":565,"mtime":1623190814390,"results":"49","hashOfConfig":"35"},{"size":447,"mtime":1620822619580,"results":"50","hashOfConfig":"35"},{"size":857,"mtime":1623189689963,"results":"51","hashOfConfig":"35"},{"size":849,"mtime":1622844557913,"results":"52","hashOfConfig":"35"},{"size":423,"mtime":1622849104280,"results":"53","hashOfConfig":"35"},{"size":2249,"mtime":1623186916058,"results":"54","hashOfConfig":"35"},{"size":4317,"mtime":1623189251168,"results":"55","hashOfConfig":"35"},{"size":415,"mtime":1621380688508,"results":"56","hashOfConfig":"35"},{"size":732,"mtime":1622990073562,"results":"57","hashOfConfig":"35"},{"size":1917,"mtime":1623071761446,"results":"58","hashOfConfig":"35"},{"size":659,"mtime":1623197806126,"results":"59","hashOfConfig":"35"},{"size":2312,"mtime":1623025157019,"results":"60","hashOfConfig":"35"},{"size":526,"mtime":1622492844703,"results":"61","hashOfConfig":"35"},{"size":6686,"mtime":1623197632688,"results":"62","hashOfConfig":"35"},{"size":17563,"mtime":1623206448985,"results":"63","hashOfConfig":"35"},{"size":612,"mtime":1620822619580,"results":"64","hashOfConfig":"35"},{"size":696,"mtime":1623017976412,"results":"65","hashOfConfig":"35"},{"size":1378,"mtime":1623029937572,"results":"66","hashOfConfig":"35"},{"size":1276,"mtime":1623194765861,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},"1653vne",{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"71"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"71"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"71"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"71"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/usr/src/client/src/index.tsx",["146"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport Modal from 'react-modal';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\nimport AuthProvider from './context/AuthContext';\nimport ScrollToTop from './components/ScrollToTop';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport HUD from './components/HUD';\n\nModal.setAppElement('#root');\n\n//@ts-ignore\n// ReactDOM.createPortal(<HUD />, document.getElementById('hud'));\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ErrorBoundary>\n        <ToastProvider\n          autoDismiss\n          autoDismissTimeout={2500}\n          placement=\"bottom-right\"\n        >\n          <AuthProvider>\n            <ScrollToTop />\n            <App />\n          </AuthProvider>\n        </ToastProvider>\n      </ErrorBoundary>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n",["147","148"],"/usr/src/client/src/App.tsx",["149","150"],"/usr/src/client/src/components/ScrollToTop.tsx",[],"/usr/src/client/src/components/ErrorBoundary.tsx",[],"/usr/src/client/src/context/AuthContext.tsx",["151","152"],"/usr/src/client/src/components/PrivateRoute.tsx",["153"],"import React, { ReactElement } from 'react';\nimport { Redirect, Route, useHistory, useLocation } from 'react-router-dom';\n\nimport { useAuth } from '../context/AuthContext';\nimport Landing from '../pages/Landing';\nimport Loading from './Loading';\n\ninterface Props {\n  component: React.FC<any>;\n  path: string | string[];\n  exact?: boolean;\n  admin?: boolean;\n  auth?: boolean;\n}\n\nexport default function PrivateRoute({\n  component: Component,\n  admin,\n  auth,\n  ...rest\n}: Props): ReactElement {\n  const authContext = useAuth();\n\n  const location = useLocation();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        let check = !!authContext?.user;\n        if (admin) check = !!authContext?.isAdmin();\n        if (auth) check = !authContext?.user;\n\n        if (check) {\n          if (location.pathname === '/' && authContext?.user?.hawksNest) {\n            return <Redirect to=\"/nest\" />;\n          }\n          return <Component {...props} />;\n        } else {\n          if (auth) {\n            return <Redirect to=\"/\" />;\n          }\n\n          if (authContext?.loading)\n            return (\n              <div className=\"screen-center\">\n                <Loading />\n              </div>\n            );\n\n          return <Landing />;\n        }\n      }}\n    />\n  );\n}\n","/usr/src/client/src/pages/Home.tsx",["154","155"],"/usr/src/client/src/pages/auth/ForgotPassword.tsx",["156","157","158","159","160"],"import React, { ReactElement } from 'react';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport { Link } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport desktopBG from '../../assets/backround/desktop.png';\nimport Button from '../../components/Button';\nimport Img from '../../components/Img';\nimport Input from '../../components/Input';\nimport Loading from '../../components/Loading';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\n\ninterface Props {}\n\nexport default function ForgotPassword({}: Props): ReactElement {\n  const [email, setEmail, resetEmail] = useInputState();\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [loading, setLoading] = React.useState(false);\n  const [banned, setBanned] = React.useState(false);\n\n  const { addToast } = useToasts();\n\n  const auth = useAuth();\n\n  const [captcha, setCaptcha] = React.useState(false);\n  const handleVerify = () => {\n    setCaptcha(true);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    const errors: string[] = [];\n    if (!email) errors.push('Email is Required');\n    if (!captcha) errors.push('Captcha must be completed');\n\n    if (errors.length === 0) {\n      try {\n        await auth?.forgotPassword(email);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n      }\n    } else {\n      setErrors(errors);\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-page login forgot\">\n      <Img src={desktopBG} className=\"background\" />\n      <h1>HAWKEYE</h1>\n      <h2>Forgot Password</h2>\n      {errors.map((err: string) => {\n        return <div className=\"error\">{err}</div>;\n      })}\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={email}\n          onChange={setEmail}\n          type=\"text\"\n          placeholder=\"Email ID\"\n          className=\"input\"\n        />\n        <div className=\"catcha\">\n          <ReCAPTCHA\n            sitekey=\"6LfvBrsaAAAAAEPwCjRmPaVuK7s8QNP5YLN8h5-W\"\n            onChange={handleVerify}\n            theme=\"dark\"\n          />\n        </div>\n        <div className=\"forgot\">\n          <Link to=\"/login\">Back to login</Link>\n        </div>\n        <Button className=\"auth-button\" name=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n","/usr/src/client/src/utils/requests.ts",[],"/usr/src/client/src/pages/auth/Register.tsx",["161","162","163","164","165","166","167","168","169","170"],"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport desktopBG from '../../assets/backround/desktop.png';\nimport Button from '../../components/Button';\nimport Img from '../../components/Img';\nimport Input from '../../components/Input';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\n\nimport ReCAPTCHA from 'react-google-recaptcha';\n\ninterface Props {}\n\nfunction validateEmail(email: string) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction validateNumber(number: string) {\n  if (number[0] === '+') number = number.slice(3);\n  const re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n  return re.test(String(number).toLowerCase());\n}\n\nexport default function Register({}: Props): ReactElement {\n  const [name, setName, resetName] = useInputState();\n  const [username, setUsername, resetUsername] = useInputState();\n  const [email, setEmail, resetEmail] = useInputState();\n  const [collage, setCollage, resetCollage] = useInputState();\n  const [number, setNumber, resetNumber] = useInputState();\n\n  const [password, setPassword, resetPassword] = useInputState();\n  const [confirm, setConfirm, resetConfirm] = useInputState();\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const { addToast } = useToasts();\n\n  const [captcha, setCaptcha] = React.useState(false);\n  const handleVerify = () => {\n    setCaptcha(true);\n  };\n\n  const auth = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    const errors: string[] = [];\n    if (!name || !username || !email || !password || !collage || !number)\n      errors.push('All fields are required');\n    if (!validateNumber(number) && number)\n      errors.push('Phone Number is invalid');\n    if (!validateEmail(email) && email) errors.push('Email is invalid');\n    if (name.length > 15 && name) errors.push('Name is too long');\n    if (username.length > 15 && username) errors.push('Username is too long');\n    if (password.length < 8 && password)\n      errors.push('Password must be atleast 8 Characters');\n    else if (password !== confirm) errors.push('Passwords do not match');\n    if (!captcha) errors.push('Captcha must be completed');\n\n    if (errors.length === 0) {\n      try {\n        await auth?.register(name, username, email, password, collage, number);\n        setLoading(false);\n      } catch (err) {\n        setErrors([err.response.data.message]);\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n      setErrors(errors);\n    }\n  };\n\n  //Take phone number or something\n  return (\n    <div className=\"auth-page register\">\n      <Img src={desktopBG} className=\"background\" />\n      <h1>HAWKEYE</h1>\n      <h2>Sign Up</h2>\n      {errors.map((err: string) => {\n        return <div className=\"error\">{err}</div>;\n      })}\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={name}\n          onChange={setName}\n          type=\"text\"\n          placeholder=\"Name\"\n          className=\"input\"\n        />\n        <Input\n          value={username}\n          onChange={setUsername}\n          type=\"text\"\n          placeholder=\"Username\"\n          className=\"input\"\n        />\n        <Input\n          value={email}\n          onChange={setEmail}\n          type=\"text\"\n          placeholder=\"Email ID\"\n          className=\"input\"\n        />\n        <Input\n          value={collage}\n          onChange={setCollage}\n          type=\"text\"\n          placeholder=\"College\"\n          className=\"input\"\n        />\n        <Input\n          value={number}\n          onChange={setNumber}\n          type=\"text\"\n          placeholder=\"Phone Number\"\n          className=\"input\"\n        />\n        <Input\n          value={password}\n          onChange={setPassword}\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"input\"\n        />\n        <Input\n          value={confirm}\n          onChange={setConfirm}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          className=\"input\"\n        />\n        <div className=\"catcha\">\n          <ReCAPTCHA\n            sitekey=\"6LfvBrsaAAAAAEPwCjRmPaVuK7s8QNP5YLN8h5-W\"\n            onChange={handleVerify}\n            theme=\"dark\"\n          />\n        </div>\n\n        <Button className=\"auth-button\" name=\"Sign up\" />\n      </form>\n      <div className=\"swap\">\n        Already have an account? <Link to=\"/login\">Log In</Link>{' '}\n      </div>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/auth/Login.tsx",["171","172","173","174","175"],"/usr/src/client/src/pages/auth/ResetPassword.tsx",["176","177","178","179"],"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useToasts } from 'react-toast-notifications';\nimport desktopBG from '../../assets/backround/desktop.png';\nimport Button from '../../components/Button';\nimport Img from '../../components/Img';\nimport Input from '../../components/Input';\nimport Loading from '../../components/Loading';\nimport { useAuth } from '../../context/AuthContext';\nimport useInputState from '../../hooks/useInputState';\n\ninterface Props {\n  match: any;\n}\n\nexport default function ResetPassword({ match }: Props): ReactElement {\n  const [password, setPassword, resetPassword] = useInputState();\n  const [confirm, setConfirm, resetConfirm] = useInputState();\n\n  const [errors, setErrors] = React.useState<string[]>([]);\n  const [loading, setLoading] = React.useState(false);\n\n  const { addToast } = useToasts();\n\n  const auth = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    const errors: string[] = [];\n    if (!password) errors.push('Password is required');\n    else if (password.length < 8)\n      errors.push('Password must be atleast 8 Characters');\n    if (password !== confirm) errors.push('Passwords do not match');\n\n    if (errors.length === 0) {\n      try {\n        await auth?.resetPassword(password, match.params.token);\n        setLoading(false);\n      } catch (err) {\n        setLoading(false);\n      }\n    } else {\n      setLoading(false);\n      setErrors(errors);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-page login forgot\">\n      <Img src={desktopBG} className=\"background\" />\n      <h1>HAWKEYE</h1>\n      <h2>Reset Password</h2>\n      {errors.map((err: string) => {\n        return <div className=\"error\">{err}</div>;\n      })}\n      <form onSubmit={handleSubmit}>\n        <Input\n          value={password}\n          onChange={setPassword}\n          type=\"password\"\n          placeholder=\"Password\"\n          className=\"input\"\n        />\n        <Input\n          value={confirm}\n          onChange={setConfirm}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          className=\"input\"\n        />\n        <Button className=\"auth-button\" name=\"Submit\" />\n      </form>\n    </div>\n  );\n}\n","/usr/src/client/src/pages/Admin.tsx",["180","181","182","183","184","185"],"import React, { ReactElement, useEffect, useState } from \"react\";\nimport { get, post ,put} from \"../utils/requests\";\nimport { Nullable, QuestionType } from \"../utils/types\";\n\nexport default function AdminPage(): ReactElement {\n    \n    const [leaderboard, setLeaderboard] = useState([]);\n    const [questions, setQuestions] = useState<Nullable<QuestionType> | any>();\n    \n    const fetchLeaderboard = async () => {\n        try {\n          await get(\"/leaderboard\").then(setLeaderboard);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n      useEffect(() => {\n        (async () => {\n          try {\n            await fetchQuestions();\n          } catch (err) {\n           \n          }\n        })();\n        return () => {\n          setQuestions({});\n        };\n      }, [leaderboard , questions]);\n\n      const fetchQuestions = async () => {\n        try {\n          await get(\"/questions\").then(setQuestions);\n        } catch (err) {\n          console.log(err);\n        }\n      };\n\n\n    const [edit , setEdit] = useState<boolean>(false);\n\n  return <div className=\"admin\">\n    <p onClick={() => {setEdit(!edit)}}>Add a questiondd</p>\n    {edit && <AdminAddQuestion />}\n    {questions.map((question: any , index: any) => {\n    return(\n      <AdminQuestion question={question} key={index} />\n    );\n    })}\n    \n  </div>;\n}\n\n\ninterface QuestionsProps{\n  question : QuestionType,\n}\n\n\n\n\nfunction AdminQuestion(questionobj: any ):ReactElement<QuestionsProps> {\n  const[expand , setExpand] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>): Promise<any> => {\n    event.preventDefault();\n    console.log(\"from handle sunb\");\n    try {\n      await put(`/questions/add/${quesID}`, {\n        text,\n        answer,\n        hints,\n        keywords,\n        level,\n        region,\n      });\n    } catch (err) {\n      throw err;\n    }\n };\n const[quesID , setquesID] = useState<string>('');\nconst [text , setText] = useState<string>('');\n    const [answer , setAnswer] = useState<string>('');\n    const [hints , setHints] = useState<Array<string>>([]);\n    const[keywords , setKeywords] = useState<Array<string>>([]);\n    const [level , setLevel] = useState<number>();\n    const[region , setRegions] = useState('');\n\n    useEffect(() => {\n      setText(questionobj.question.text);\n      setAnswer(questionobj.question.answer);\n      setHints(questionobj.question.hints);\n      setLevel(questionobj.question.level);\n      setKeywords(questionobj.question.keywords);\n      setquesID(questionobj.question._id);\n      setRegions(questionobj.question.region);\n      console.log(hints[0]);\n    }, [])\n\n    const updateHint= (index:number) => (event : React.ChangeEvent<HTMLInputElement>)  => {\n      const newArr : string[] = [...hints];\n  \n      newArr[index] = event.target.value; \n  \n      setHints(newArr); \n  }\n\n  return(\n    <div >\n      <span onClick={() => {setExpand(!expand)}}>{text}   </span>\n      {\n      expand && <div style={{width: \"20px\"}}>\n     <form  id=\"updateQues\" style={{    display: \"grid\"}} onSubmit={handleSubmit}>\n      <label htmlFor=\"ques\">Text</label>\n      <input id=\"ques\" value={text} onChange={(e) => setText(e.target.value)}/>\n      <label htmlFor=\"answer\">answer</label>\n      <input id=\"answer\" value={answer} onChange={(e) => setAnswer(e.target.value)}/>\n      {hints.map((hint , ind) =>{\n        return(\n          <>\n          <label htmlFor={\"hint\"+ind}>hint{ind+1}</label>\n          <input id={\"hint\"+ind} value={hint} onChange={updateHint(ind)}/> \n          \n          </>\n        );\n      })}\n      <label htmlFor=\"keywords\">keywords</label>\n      <input id=\"keywords\" />\n      <label htmlFor=\"level\">level</label>\n      <input id=\"level\" value={level}  onChange={(e) => setLevel(Number(e.target.value))} />\n      <button type=\"submit\" form=\"updateQues\" value=\"Submit\">Submit</button>\n      <label htmlFor=\"regionname\">regionname</label>\n      <input id=\"regionname\" />\n      <label htmlFor=\"regiondesc\">regiondesc</label>\n      <input id=\"regiondesc\" />\n     </form>\n    </div>\n    }\n    </div>\n  );\n}\n\n\n\n\n function AdminAddQuestion(): ReactElement {\n\n  const[quesID , setquesID] = useState<string>('');\n  const [text , setText] = useState<string>('');\n      const [answer , setAnswer] = useState<string>('');\n      const [hints , setHints] = useState<Array<string>>([]);\n      const[keywords , setKeywords] = useState<Array<string>>([]);\n      const [level , setLevel] = useState<number>();\n      const[region , setRegions] = useState('');\n\n      const updateHint= (index:number) => (event : React.ChangeEvent<HTMLInputElement>)  => {\n        const newArr : string[] = [...hints];\n    \n        newArr[index] = event.target.value; \n    \n        setHints(newArr); \n    }\n\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>): Promise<any> => {\n      event.preventDefault();\n      console.log(\"from handle sunb\");\n      try {\n        await put(`/questions/add/${quesID}`, {\n          text,\n          answer,\n          hints,\n          keywords,\n          level,\n          region,\n        });\n      } catch (err) {\n        throw err;\n      }\n   };\n\n   return(\n     <div>\n       <div style={{width: \"20px\"}}>\n     <form  id=\"updateQues\" style={{    display: \"grid\"}} onSubmit={handleSubmit}>\n      <label htmlFor=\"ques\">Text</label>\n      <input id=\"ques\" value={text} onChange={(e) => setText(e.target.value)}/>\n      <label htmlFor=\"answer\">answer</label>\n      <input id=\"answer\" value={answer} onChange={(e) => setAnswer(e.target.value)}/>\n      {hints.map((hint , ind) =>{\n        return(\n          <>\n          <label htmlFor={\"hint\"+ind}>hint{ind+1}</label>\n          <input id={\"hint\"+ind} value={hint} onChange={updateHint(ind)}/> \n          \n          </>\n        );\n      })}\n      <label htmlFor=\"keywords\">keywords</label>\n      <input id=\"keywords\" />\n      <label htmlFor=\"level\">level</label>\n      <input id=\"level\" value=\"{level}\"  onChange={(e) => setLevel(Number(e.target.value))} />\n      <button type=\"submit\" form=\"updateQues\" value=\"Submit\">Submit</button>\n      <label htmlFor=\"regionname\">regionname</label>\n      <input id=\"regionname\" />\n      <label htmlFor=\"regiondesc\">regiondesc</label>\n      <input id=\"regiondesc\" />\n     </form>\n    </div>\n     </div>\n   );\n }","/usr/src/client/src/pages/Landing.tsx",["186","187","188","189"],"/usr/src/client/src/components/Loading.tsx",["190"],"/usr/src/client/src/hooks/useInputState.ts",[],"/usr/src/client/src/components/Button.tsx",[],"/usr/src/client/src/components/Input.tsx",[],"/usr/src/client/src/components/Img.tsx",[],"/usr/src/client/src/components/HUD.tsx",["191"],"import React, { ReactElement } from 'react';\nimport squareLeft from '../assets/square-one.png';\nimport squareRight from '../assets/square-two.png';\n\nimport cart from '../assets/cart.png';\nimport rules from '../assets/rules.png';\nimport { useAuth } from '../context/AuthContext';\nimport ReactTooltip from 'react-tooltip';\nimport Shop from './Shop';\nimport Rulebook from './Rulebook';\nimport { useLocation } from 'react-router-dom';\n\ninterface Props {\n  onOpen?: () => any;\n  onClose?: () => any;\n}\n\nexport default function HUD({ onOpen, onClose }: Props): ReactElement {\n  const auth = useAuth();\n\n  const [shopOpen, setShopOpen] = React.useState(false);\n\n  const [rulebookOpen, setRulebookOpen] = React.useState(false);\n\n  const location = useLocation();\n\n  React.useEffect(() => {\n    if (!shopOpen && !rulebookOpen) return;\n    if (onOpen) onOpen();\n    return () => {\n      if (onClose) onClose();\n    };\n  }, [shopOpen, rulebookOpen]);\n\n  return (\n    <div className=\"hud\">\n      {auth?.user && location.pathname !== '/nest' && (\n        <div\n          onClick={() => {\n            setShopOpen(true);\n          }}\n          data-tip=\"Shop\"\n          className=\"icon icon--1\"\n        >\n          <img src={squareLeft} alt=\"\" />\n          <img src={cart} alt=\"\" className=\"logo\" />\n        </div>\n      )}\n      <ReactTooltip effect=\"solid\" type=\"light\" />\n\n      <div\n        onClick={() => {\n          setRulebookOpen(true);\n        }}\n        data-tip=\"Rulebook\"\n        className=\"icon icon--2\"\n      >\n        <img src={squareRight} alt=\"\" />\n        <img src={rules} alt=\"\" className=\"logo\" />\n      </div>\n      <ReactTooltip effect=\"solid\" type=\"light\" />\n\n      {((auth?.user && location.pathname === '/') || auth?.user?.hawksNest) && (\n        <div onClick={auth?.logout} data-tip=\"Logout\" className=\"logout\">\n          <img src={squareLeft} alt=\"\" />\n          <i className=\"fas fa-power-off\"></i>\n        </div>\n      )}\n      <ReactTooltip effect=\"solid\" type=\"light\" />\n\n      <Shop\n        open={shopOpen}\n        closeHandler={() => {\n          setShopOpen(false);\n        }}\n      />\n      <Rulebook\n        open={rulebookOpen}\n        closeHandler={() => {\n          setRulebookOpen(false);\n        }}\n      />\n    </div>\n  );\n}\n","/usr/src/client/src/components/Shop.tsx",[],"/usr/src/client/src/components/Rulebook.tsx",[],"/usr/src/client/src/hooks/useFetch.ts",["192","193"],"import { useEffect, useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { get } from '../utils/requests';\n\nexport default (url: string, lazy = false) => {\n  const [isLoading, setIsLoading] = useState(!lazy);\n  const [error, setError] = useState<any>(null);\n  const [data, setData] = useState<any>(null);\n\n  const auth = useAuth();\n\n  const fetch = (loading = true) => {\n    setIsLoading(loading);\n    get(url)\n      .then((data: any) => {\n        setData(data);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setError(err);\n        auth?.check();\n      });\n  };\n\n  useEffect(() => {\n    if (!lazy) {\n      fetch();\n    }\n  }, []);\n\n  return { isLoading, error, data, fetch };\n};\n","/usr/src/client/src/utils/data.ts",[],"/usr/src/client/src/pages/NotFound.tsx",["194"],"/usr/src/client/src/components/Dropdown.tsx",["195"],"import React, { ReactElement } from 'react';\nimport useClickOut from '../hooks/useClickOut';\nimport { Nullable } from '../utils/types';\n\ninterface Props {\n  options: {\n    label: string;\n    value: string;\n    locked: boolean;\n    completed: boolean;\n  }[];\n  defaultIndex?: number;\n  setter: any;\n}\n\nexport default function Dropdown({\n  options,\n  defaultIndex = 0,\n  setter,\n}: Props): Nullable<ReactElement> {\n  const [open, setOpen] = React.useState(false);\n  const [currentOption, setCurrentOption] = React.useState(defaultIndex);\n\n  const divRef = React.useRef<HTMLDivElement>(null);\n\n  useClickOut(\n    divRef,\n    () => {},\n    () => {\n      setOpen(false);\n    }\n  );\n\n  React.useEffect(() => {\n    setter(options[defaultIndex]);\n  }, []);\n\n  if (Object.keys(options).length === 0) return null;\n  return (\n    <div\n      className={open ? 'dropdown-div dropdown-div--open' : 'dropdown-div'}\n      ref={divRef}\n    >\n      <div\n        className={open ? 'dropdown-top dropdown-top--open' : 'dropdown-top'}\n        onClick={() => setOpen((prev) => !prev)}\n      >\n        <div className=\"arrow\">\n          <i className=\"fas fa-angle-down\"></i>\n        </div>\n        <h4>{options[currentOption].label}</h4>\n      </div>\n      {open && (\n        <div\n          className={\n            open ? 'dropdown-list dropdown-list--open' : 'dropdown-list'\n          }\n        >\n          {options.map((option: any, index: number) => {\n            let classNames = ['option'];\n            if (option.locked) classNames.push('option--locked');\n            if (option.completed) classNames.push('option--completed');\n\n            return (\n              <div\n                onClick={() => {\n                  setCurrentOption(index);\n                  setOpen(false);\n                  setter(options[index]);\n                }}\n                key={option.value}\n                className={classNames.join(' ')}\n              >\n                {!option.locked && !option.completed && (\n                  <i className=\"fas fa-unlock\"></i>\n                )}\n                {(option.locked || option.completed) && (\n                  <i className=\"fas fa-lock\"></i>\n                )}\n                <h4> {option.label} </h4>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","/usr/src/client/src/hooks/useClickOut.ts",["196"],"import { useEffect } from 'react';\n\nexport default function useClickOut(\n  ref: any,\n  insidehandler: () => any,\n  outsideHandler: () => any\n) {\n  useEffect(() => {\n    function clickOutsiteHandler(e: any) {\n      if (ref.current && !ref.current.contains(e.target)) {\n        outsideHandler();\n      } else {\n        insidehandler();\n      }\n    }\n\n    document.addEventListener('mousedown', clickOutsiteHandler);\n\n    return () => {\n      document.removeEventListener('mousedown', clickOutsiteHandler);\n    };\n  }, [ref]);\n}\n","/usr/src/client/src/pages/Nest.tsx",["197","198","199","200"],"/usr/src/client/src/pages/Question.tsx",["201","202","203"],"/usr/src/client/src/hooks/useConfirm.ts",[],"/usr/src/client/src/components/Confirm.tsx",[],"/usr/src/client/src/pages/auth/VerifyMail.tsx",["204"],"import React, { ReactElement } from 'react';\nimport Loading from '../../components/Loading';\nimport { put } from '../../utils/requests';\nimport desktopBG from '../../assets/backround/desktop.png';\n\nimport animationData from '../../assets/animations/verified.json';\nimport Lottie from 'react-lottie';\nimport Img from '../../components/Img';\nimport Button from '../../components/Button';\n\ninterface Props {\n  match: any;\n}\n\nconst defaultOptions = {\n  loop: false,\n  autoplay: true,\n  animationData: animationData,\n  rendererSettings: {\n    preserveAspectRatio: 'xMidYMid slice',\n  },\n};\n\nexport default function VerifyMail({ match }: Props): ReactElement {\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    (async () => {\n      try {\n        await put(`/verify/${match.params.token}`);\n        setLoading(false);\n      } catch (err) {}\n    })();\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"screen-center\">\n        <Loading />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"verify-mail\">\n      <Img src={desktopBG} className=\"background\" />\n      <Lottie options={defaultOptions} height={250} width={250} />\n      <h1>Email Verified!</h1>\n      <Button\n        className=\"btn\"\n        width={200}\n        pathname={`/login`}\n        state={{ allow: true }}\n        link\n        name=\"Login\"\n      />\n    </div>\n  );\n}\n","/usr/src/client/src/pages/ReadyToPlay.tsx",["205","206","207","208","209"],{"ruleId":"210","severity":1,"message":"211","line":11,"column":8,"nodeType":"212","messageId":"213","endLine":11,"endColumn":11},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"210","severity":1,"message":"218","line":2,"column":25,"nodeType":"212","messageId":"213","endLine":2,"endColumn":36},{"ruleId":"210","severity":1,"message":"219","line":10,"column":10,"nodeType":"212","messageId":"213","endLine":10,"endColumn":13},{"ruleId":"210","severity":1,"message":"220","line":50,"column":9,"nodeType":"212","messageId":"213","endLine":50,"endColumn":17},{"ruleId":"221","severity":1,"message":"222","line":72,"column":6,"nodeType":"223","endLine":72,"endColumn":8,"suggestions":"224"},{"ruleId":"210","severity":1,"message":"225","line":2,"column":27,"nodeType":"212","messageId":"213","endLine":2,"endColumn":37},{"ruleId":"210","severity":1,"message":"226","line":12,"column":8,"nodeType":"212","messageId":"213","endLine":12,"endColumn":15},{"ruleId":"221","severity":1,"message":"227","line":164,"column":6,"nodeType":"223","endLine":164,"endColumn":8,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":15,"column":40,"nodeType":"231","messageId":"232","endLine":15,"endColumn":49},{"ruleId":"210","severity":1,"message":"233","line":16,"column":27,"nodeType":"212","messageId":"213","endLine":16,"endColumn":37},{"ruleId":"210","severity":1,"message":"234","line":20,"column":10,"nodeType":"212","messageId":"213","endLine":20,"endColumn":16},{"ruleId":"210","severity":1,"message":"235","line":20,"column":18,"nodeType":"212","messageId":"213","endLine":20,"endColumn":27},{"ruleId":"210","severity":1,"message":"236","line":22,"column":11,"nodeType":"212","messageId":"213","endLine":22,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":26,"column":34,"nodeType":"231","messageId":"232","endLine":26,"endColumn":43},{"ruleId":"210","severity":1,"message":"237","line":27,"column":25,"nodeType":"212","messageId":"213","endLine":27,"endColumn":34},{"ruleId":"210","severity":1,"message":"238","line":28,"column":33,"nodeType":"212","messageId":"213","endLine":28,"endColumn":46},{"ruleId":"210","severity":1,"message":"233","line":29,"column":27,"nodeType":"212","messageId":"213","endLine":29,"endColumn":37},{"ruleId":"210","severity":1,"message":"239","line":30,"column":31,"nodeType":"212","messageId":"213","endLine":30,"endColumn":43},{"ruleId":"210","severity":1,"message":"240","line":31,"column":29,"nodeType":"212","messageId":"213","endLine":31,"endColumn":40},{"ruleId":"210","severity":1,"message":"241","line":33,"column":33,"nodeType":"212","messageId":"213","endLine":33,"endColumn":46},{"ruleId":"210","severity":1,"message":"242","line":34,"column":31,"nodeType":"212","messageId":"213","endLine":34,"endColumn":43},{"ruleId":"210","severity":1,"message":"243","line":37,"column":10,"nodeType":"212","messageId":"213","endLine":37,"endColumn":17},{"ruleId":"210","severity":1,"message":"236","line":39,"column":11,"nodeType":"212","messageId":"213","endLine":39,"endColumn":19},{"ruleId":"229","severity":1,"message":"230","line":14,"column":31,"nodeType":"231","messageId":"232","endLine":14,"endColumn":40},{"ruleId":"210","severity":1,"message":"233","line":15,"column":27,"nodeType":"212","messageId":"213","endLine":15,"endColumn":37},{"ruleId":"210","severity":1,"message":"241","line":16,"column":33,"nodeType":"212","messageId":"213","endLine":16,"endColumn":46},{"ruleId":"210","severity":1,"message":"243","line":19,"column":10,"nodeType":"212","messageId":"213","endLine":19,"endColumn":17},{"ruleId":"210","severity":1,"message":"234","line":20,"column":10,"nodeType":"212","messageId":"213","endLine":20,"endColumn":16},{"ruleId":"210","severity":1,"message":"244","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"241","line":17,"column":33,"nodeType":"212","messageId":"213","endLine":17,"endColumn":46},{"ruleId":"210","severity":1,"message":"242","line":18,"column":31,"nodeType":"212","messageId":"213","endLine":18,"endColumn":43},{"ruleId":"210","severity":1,"message":"236","line":23,"column":11,"nodeType":"212","messageId":"213","endLine":23,"endColumn":19},{"ruleId":"210","severity":1,"message":"245","line":2,"column":15,"nodeType":"212","messageId":"213","endLine":2,"endColumn":19},{"ruleId":"210","severity":1,"message":"246","line":10,"column":11,"nodeType":"212","messageId":"213","endLine":10,"endColumn":27},{"ruleId":"221","severity":1,"message":"247","line":98,"column":8,"nodeType":"223","endLine":98,"endColumn":10,"suggestions":"248"},{"ruleId":"210","severity":1,"message":"249","line":148,"column":18,"nodeType":"212","messageId":"213","endLine":148,"endColumn":27},{"ruleId":"210","severity":1,"message":"250","line":152,"column":24,"nodeType":"212","messageId":"213","endLine":152,"endColumn":35},{"ruleId":"210","severity":1,"message":"251","line":154,"column":22,"nodeType":"212","messageId":"213","endLine":154,"endColumn":32},{"ruleId":"210","severity":1,"message":"252","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"211","line":3,"column":8,"nodeType":"212","messageId":"213","endLine":3,"endColumn":11},{"ruleId":"221","severity":1,"message":"253","line":27,"column":6,"nodeType":"223","endLine":27,"endColumn":8,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":33,"column":7,"nodeType":"257","endLine":33,"endColumn":28},{"ruleId":"210","severity":1,"message":"258","line":2,"column":8,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"221","severity":1,"message":"259","line":33,"column":6,"nodeType":"223","endLine":33,"endColumn":30,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":5,"column":1,"nodeType":"263","endLine":32,"endColumn":3},{"ruleId":"221","severity":1,"message":"264","line":29,"column":6,"nodeType":"223","endLine":29,"endColumn":8,"suggestions":"265"},{"ruleId":"229","severity":1,"message":"230","line":8,"column":33,"nodeType":"231","messageId":"232","endLine":8,"endColumn":42},{"ruleId":"221","severity":1,"message":"266","line":36,"column":6,"nodeType":"223","endLine":36,"endColumn":8,"suggestions":"267"},{"ruleId":"221","severity":1,"message":"268","line":22,"column":6,"nodeType":"223","endLine":22,"endColumn":11,"suggestions":"269"},{"ruleId":"210","severity":1,"message":"225","line":6,"column":10,"nodeType":"212","messageId":"213","endLine":6,"endColumn":20},{"ruleId":"210","severity":1,"message":"270","line":10,"column":10,"nodeType":"212","messageId":"213","endLine":10,"endColumn":18},{"ruleId":"229","severity":1,"message":"230","line":21,"column":30,"nodeType":"231","messageId":"232","endLine":21,"endColumn":39},{"ruleId":"255","severity":1,"message":"256","line":81,"column":9,"nodeType":"257","endLine":81,"endColumn":30},{"ruleId":"210","severity":1,"message":"219","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":13},{"ruleId":"221","severity":1,"message":"271","line":56,"column":6,"nodeType":"223","endLine":56,"endColumn":8,"suggestions":"272"},{"ruleId":"221","severity":1,"message":"273","line":61,"column":6,"nodeType":"223","endLine":61,"endColumn":33,"suggestions":"274"},{"ruleId":"221","severity":1,"message":"275","line":34,"column":6,"nodeType":"223","endLine":34,"endColumn":8,"suggestions":"276"},{"ruleId":"210","severity":1,"message":"244","line":2,"column":10,"nodeType":"212","messageId":"213","endLine":2,"endColumn":14},{"ruleId":"210","severity":1,"message":"277","line":2,"column":16,"nodeType":"212","messageId":"213","endLine":2,"endColumn":35},{"ruleId":"210","severity":1,"message":"278","line":11,"column":10,"nodeType":"212","messageId":"213","endLine":11,"endColumn":16},{"ruleId":"210","severity":1,"message":"279","line":11,"column":18,"nodeType":"212","messageId":"213","endLine":11,"endColumn":27},{"ruleId":"210","severity":1,"message":"280","line":11,"column":29,"nodeType":"212","messageId":"213","endLine":11,"endColumn":40},"@typescript-eslint/no-unused-vars","'HUD' is defined but never used.","Identifier","unusedVar","no-native-reassign",["281"],"no-negated-in-lhs",["282"],"'useLocation' is defined but never used.","'get' is defined but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMe'. Either include it or remove the dependency array.","ArrayExpression",["283"],"'useHistory' is defined but never used.","'Loading' is defined but never used.","React Hook React.useEffect has missing dependencies: 'auth?.user?.lastUnlockedIndex', 'auth?.user?.regions', and 'pins'. Either include them or remove the dependency array.",["284"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'resetEmail' is assigned a value but never used.","'banned' is assigned a value but never used.","'setBanned' is assigned a value but never used.","'addToast' is assigned a value but never used.","'resetName' is assigned a value but never used.","'resetUsername' is assigned a value but never used.","'resetCollage' is assigned a value but never used.","'resetNumber' is assigned a value but never used.","'resetPassword' is assigned a value but never used.","'resetConfirm' is assigned a value but never used.","'loading' is assigned a value but never used.","'Link' is defined but never used.","'post' is defined but never used.","'fetchLeaderboard' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'hints', 'questionobj.question._id', 'questionobj.question.answer', 'questionobj.question.hints', 'questionobj.question.keywords', 'questionobj.question.level', 'questionobj.question.region', and 'questionobj.question.text'. Either include them or remove the dependency array. If 'setText' needs the current value of 'questionobj.question.text', you can also switch to useReducer instead of useState and read 'questionobj.question.text' in the reducer.",["285"],"'setquesID' is assigned a value but never used.","'setKeywords' is assigned a value but never used.","'setRegions' is assigned a value but never used.","'Button' is defined but never used.","React Hook React.useEffect has a missing dependency: 'histroy'. Either include it or remove the dependency array.",["286"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'Lottie' is defined but never used.","React Hook React.useEffect has missing dependencies: 'onClose' and 'onOpen'. Either include them or remove the dependency array. If 'onOpen' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["287"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'fetch' and 'lazy'. Either include them or remove the dependency array.",["288"],"React Hook React.useEffect has missing dependencies: 'defaultIndex', 'options', and 'setter'. Either include them or remove the dependency array. If 'setter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["289"],"React Hook useEffect has missing dependencies: 'insidehandler' and 'outsideHandler'. Either include them or remove the dependency array. If 'outsideHandler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["290"],"'powerUps' is defined but never used.","React Hook React.useEffect has a missing dependency: 'auth'. Either include it or remove the dependency array.",["291"],"React Hook React.useEffect has missing dependencies: 'auth' and 'questionFetcher.data.question.region.name'. Either include them or remove the dependency array.",["292"],"React Hook React.useEffect has a missing dependency: 'match.params.token'. Either include it or remove the dependency array.",["293"],"'RouteComponentProps' is defined but never used.","'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.","'resetAnswer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [fetchMe]",{"range":"316","text":"317"},"Update the dependencies array to be: [auth?.user?.lastUnlockedIndex, auth?.user?.regions, pins]",{"range":"318","text":"319"},"Update the dependencies array to be: [hints, questionobj.question._id, questionobj.question.answer, questionobj.question.hints, questionobj.question.keywords, questionobj.question.level, questionobj.question.region, questionobj.question.text]",{"range":"320","text":"321"},"Update the dependencies array to be: [histroy]",{"range":"322","text":"323"},"Update the dependencies array to be: [shopOpen, rulebookOpen, onOpen, onClose]",{"range":"324","text":"325"},"Update the dependencies array to be: [fetch, lazy]",{"range":"326","text":"327"},"Update the dependencies array to be: [defaultIndex, options, setter]",{"range":"328","text":"329"},"Update the dependencies array to be: [insidehandler, outsideHandler, ref]",{"range":"330","text":"331"},"Update the dependencies array to be: [auth]",{"range":"332","text":"333"},"Update the dependencies array to be: [auth, questionFetcher.data.question.region.name, questionFetcher.isLoading]",{"range":"334","text":"335"},"Update the dependencies array to be: [match.params.token]",{"range":"336","text":"337"},[1772,1774],"[fetchMe]",[4746,4748],"[auth?.user?.lastUnlockedIndex, auth?.user?.regions, pins]",[2640,2642],"[hints, questionobj.question._id, questionobj.question.answer, questionobj.question.hints, questionobj.question.keywords, questionobj.question.level, questionobj.question.region, questionobj.question.text]",[807,809],"[histroy]",[913,937],"[shopOpen, rulebookOpen, onOpen, onClose]",[679,681],"[fetch, lazy]",[744,746],"[defaultIndex, options, setter]",[516,521],"[insidehandler, outsideHandler, ref]",[1804,1806],"[auth]",[1955,1982],"[auth, questionFetcher.data.question.region.name, questionFetcher.isLoading]",[884,886],"[match.params.token]"]